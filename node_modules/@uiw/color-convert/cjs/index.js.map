{
  "version": 3,
  "names": [
    "RGB_MAX",
    "HUE_MAX",
    "SV_MAX",
    "rgbaToHsva",
    "r",
    "g",
    "b",
    "a",
    "max",
    "Math",
    "delta",
    "min",
    "hh",
    "h",
    "s",
    "v",
    "hsvaToHslString",
    "hsva",
    "hsvaToHsla",
    "l",
    "round",
    "hsvaToHsvString",
    "hsvaToHsvaString",
    "hsvaToHslaString",
    "hslStringToHsla",
    "str",
    "match",
    "map",
    "Number",
    "hslaStringToHsva",
    "hslString",
    "matcher",
    "exec",
    "hslaToHsva",
    "parseHue",
    "undefined",
    "hslStringToHsva",
    "hsvaStringToHsva",
    "hsvString",
    "angleUnits",
    "grad",
    "turn",
    "rad",
    "PI",
    "value",
    "unit",
    "hsvStringToHsva",
    "rgbaStringToHsva",
    "rgbaString",
    "rgbStringToHsva",
    "rgbaToHex",
    "bin",
    "Array",
    "length",
    "join",
    "toString",
    "rgbaToHexa",
    "alpha",
    "slice",
    "hexToHsva",
    "hex",
    "hexToRgba",
    "htemp",
    "replace",
    "test",
    "charAt",
    "reg",
    "RegExp",
    "parseInt",
    "hsvaToRgba",
    "_h",
    "_s",
    "_v",
    "hi",
    "floor",
    "f",
    "_p",
    "_q",
    "_t",
    "rgba",
    "hsvaToRgbString",
    "hsvaToRgbaString",
    "rgbaToRgb",
    "hslaToHsl",
    "hsvaToHex",
    "hsvaToHexa",
    "hsvaToHsv",
    "color",
    "rgb",
    "hsl",
    "hsv",
    "hsla",
    "hexa",
    "validHex"
  ],
  "sources": [
    "../src/index.ts"
  ],
  "sourcesContent": [
    "import { validHex } from './utils';\n\nexport * from './utils';\nexport * from './getContrastingColor';\n\nconst RGB_MAX = 255;\nconst HUE_MAX = 360;\nconst SV_MAX = 100;\n\nexport type ObjectColor = RgbColor | HslColor | HsvColor | RgbaColor | HslaColor | HsvaColor;\nexport type ColorResult = {\n  rgb: RgbColor;\n  hsl: HslColor;\n  hsv: HsvColor;\n  rgba: RgbaColor;\n  hsla: HslaColor;\n  hsva: HsvaColor;\n  hex: string;\n  hexa: string;\n};\n\nexport interface HsvColor {\n  h: number;\n  s: number;\n  v: number;\n}\n\nexport interface HsvaColor extends HsvColor {\n  a: number;\n}\n\nexport interface RgbColor {\n  r: number;\n  g: number;\n  b: number;\n}\nexport interface RgbaColor extends RgbColor {\n  a: number;\n}\n\n/**\n * ```js\n * rgbaToHsva({ r: 255, g: 255, b: 255, a: 1 }) //=> { h: 0, s: 0, v: 100, a: 1 }\n * ```\n */\nexport const rgbaToHsva = ({ r, g, b, a }: RgbaColor): HsvaColor => {\n  const max = Math.max(r, g, b);\n  const delta = max - Math.min(r, g, b);\n\n  // prettier-ignore\n  const hh = delta\n    ? max === r\n      ? (g - b) / delta\n      : max === g\n        ? 2 + (b - r) / delta\n        : 4 + (r - g) / delta\n    : 0;\n\n  return {\n    h: 60 * (hh < 0 ? hh + 6 : hh),\n    s: max ? (delta / max) * SV_MAX : 0,\n    v: (max / RGB_MAX) * SV_MAX,\n    a,\n  };\n};\n\nexport const hsvaToHslString = (hsva: HsvaColor): string => {\n  const { h, s, l } = hsvaToHsla(hsva);\n  // return `hsl(${h}, ${s}%, ${l}%)`;\n  return `hsl(${h}, ${Math.round(s)}%, ${Math.round(l)}%)`;\n};\n\nexport const hsvaToHsvString = ({ h, s, v }: HsvaColor): string => {\n  return `hsv(${h}, ${s}%, ${v}%)`;\n};\n\nexport const hsvaToHsvaString = ({ h, s, v, a }: HsvaColor): string => {\n  return `hsva(${h}, ${s}%, ${v}%, ${a})`;\n};\n\nexport const hsvaToHslaString = (hsva: HsvaColor): string => {\n  const { h, s, l, a } = hsvaToHsla(hsva);\n  return `hsla(${h}, ${s}%, ${l}%, ${a})`;\n};\n\nexport const hslStringToHsla = (str: string): HslaColor => {\n  const [h, s, l, a] = (str.match(/\\d+/g) || []).map(Number);\n  return { h, s, l, a };\n};\n\nexport const hslaStringToHsva = (hslString: string): HsvaColor => {\n  const matcher =\n    /hsla?\\(?\\s*(-?\\d*\\.?\\d+)(deg|rad|grad|turn)?[,\\s]+(-?\\d*\\.?\\d+)%?[,\\s]+(-?\\d*\\.?\\d+)%?,?\\s*[/\\s]*(-?\\d*\\.?\\d+)?(%)?\\s*\\)?/i;\n  const match = matcher.exec(hslString);\n\n  if (!match) return { h: 0, s: 0, v: 0, a: 1 };\n\n  return hslaToHsva({\n    h: parseHue(match[1], match[2]),\n    s: Number(match[3]),\n    l: Number(match[4]),\n    a: match[5] === undefined ? 1 : Number(match[5]) / (match[6] ? 100 : 1),\n  });\n};\n\nexport const hslStringToHsva = hslaStringToHsva;\n\nexport const hslaToHsva = ({ h, s, l, a }: HslaColor): HsvaColor => {\n  s *= (l < 50 ? l : SV_MAX - l) / SV_MAX;\n\n  return {\n    h: h,\n    s: s > 0 ? ((2 * s) / (l + s)) * SV_MAX : 0,\n    v: l + s,\n    a,\n  };\n};\n\nexport interface HslColor {\n  h: number;\n  s: number;\n  l: number;\n}\nexport interface HslaColor extends HslColor {\n  a: number;\n}\nexport const hsvaToHsla = ({ h, s, v, a }: HsvaColor): HslaColor => {\n  const hh = ((200 - s) * v) / SV_MAX;\n\n  return {\n    h,\n    s: hh > 0 && hh < 200 ? ((s * v) / SV_MAX / (hh <= SV_MAX ? hh : 200 - hh)) * SV_MAX : 0,\n    l: hh / 2,\n    a,\n  };\n};\n\nexport const hsvaStringToHsva = (hsvString: string): HsvaColor => {\n  const matcher =\n    /hsva?\\(?\\s*(-?\\d*\\.?\\d+)(deg|rad|grad|turn)?[,\\s]+(-?\\d*\\.?\\d+)%?[,\\s]+(-?\\d*\\.?\\d+)%?,?\\s*[/\\s]*(-?\\d*\\.?\\d+)?(%)?\\s*\\)?/i;\n  const match = matcher.exec(hsvString);\n\n  if (!match) return { h: 0, s: 0, v: 0, a: 1 };\n\n  return {\n    h: parseHue(match[1], match[2]),\n    s: Number(match[3]),\n    v: Number(match[4]),\n    a: match[5] === undefined ? 1 : Number(match[5]) / (match[6] ? SV_MAX : 1),\n  };\n};\n\n/**\n * Valid CSS <angle> units.\n * https://developer.mozilla.org/en-US/docs/Web/CSS/angle\n */\nconst angleUnits: Record<string, number> = {\n  grad: HUE_MAX / 400,\n  turn: HUE_MAX,\n  rad: HUE_MAX / (Math.PI * 2),\n};\n\nexport const parseHue = (value: string, unit = 'deg'): number => {\n  return Number(value) * (angleUnits[unit] || 1);\n};\n\nexport const hsvStringToHsva = hsvaStringToHsva;\nexport const rgbaStringToHsva = (rgbaString: string): HsvaColor => {\n  const matcher =\n    /rgba?\\(?\\s*(-?\\d*\\.?\\d+)(%)?[,\\s]+(-?\\d*\\.?\\d+)(%)?[,\\s]+(-?\\d*\\.?\\d+)(%)?,?\\s*[/\\s]*(-?\\d*\\.?\\d+)?(%)?\\s*\\)?/i;\n  const match = matcher.exec(rgbaString);\n\n  if (!match) return { h: 0, s: 0, v: 0, a: 1 };\n\n  return rgbaToHsva({\n    r: Number(match[1]) / (match[2] ? SV_MAX / RGB_MAX : 1),\n    g: Number(match[3]) / (match[4] ? SV_MAX / RGB_MAX : 1),\n    b: Number(match[5]) / (match[6] ? SV_MAX / RGB_MAX : 1),\n    a: match[7] === undefined ? 1 : Number(match[7]) / (match[8] ? SV_MAX : 1),\n  });\n};\n\nexport const rgbStringToHsva = rgbaStringToHsva;\n\n/** Converts an RGBA color plus alpha transparency to hex */\nexport const rgbaToHex = ({ r, g, b }: RgbaColor): string => {\n  let bin = (r << 16) | (g << 8) | b;\n  return `#${((h) => new Array(7 - h.length).join('0') + h)(bin.toString(16))}`;\n};\n\nexport const rgbaToHexa = ({ r, g, b, a }: RgbaColor): string => {\n  const alpha = typeof a === 'number' && ((a * 255) | (1 << 8)).toString(16).slice(1);\n  return `${rgbaToHex({ r, g, b, a })}${alpha ? alpha : ''}`;\n};\n\nexport const hexToHsva = (hex: string): HsvaColor => rgbaToHsva(hexToRgba(hex));\nexport const hexToRgba = (hex: string): RgbaColor => {\n  const htemp = hex.replace('#', '');\n  if (/^#?/.test(hex) && htemp.length === 3) {\n    hex = `#${htemp.charAt(0)}${htemp.charAt(0)}${htemp.charAt(1)}${htemp.charAt(1)}${htemp.charAt(2)}${htemp.charAt(2)}`;\n  }\n  const reg = new RegExp(`[A-Za-z0-9]{2}`, 'g');\n  const [r, g, b = 0, a] = hex.match(reg)!.map((v) => parseInt(v, 16));\n  return {\n    r,\n    g,\n    b,\n    a: a ? a / RGB_MAX : 1,\n  };\n};\n\n/**\n * Converts HSVA to RGBA. Based on formula from https://en.wikipedia.org/wiki/HSL_and_HSV\n * @param color HSVA color as an array [0-360, 0-1, 0-1, 0-1]\n */\nexport const hsvaToRgba = ({ h, s, v, a }: HsvaColor): RgbaColor => {\n  let _h = h / 60,\n    _s = s / SV_MAX,\n    _v = v / SV_MAX,\n    hi = Math.floor(_h) % 6;\n\n  let f = _h - Math.floor(_h),\n    _p = RGB_MAX * _v * (1 - _s),\n    _q = RGB_MAX * _v * (1 - _s * f),\n    _t = RGB_MAX * _v * (1 - _s * (1 - f));\n  _v *= RGB_MAX;\n  const rgba = {} as RgbaColor;\n  switch (hi) {\n    case 0:\n      rgba.r = _v;\n      rgba.g = _t;\n      rgba.b = _p;\n      break;\n    case 1:\n      rgba.r = _q;\n      rgba.g = _v;\n      rgba.b = _p;\n      break;\n    case 2:\n      rgba.r = _p;\n      rgba.g = _v;\n      rgba.b = _t;\n      break;\n    case 3:\n      rgba.r = _p;\n      rgba.g = _q;\n      rgba.b = _v;\n      break;\n    case 4:\n      rgba.r = _t;\n      rgba.g = _p;\n      rgba.b = _v;\n      break;\n    case 5:\n      rgba.r = _v;\n      rgba.g = _p;\n      rgba.b = _q;\n      break;\n  }\n  rgba.r = Math.round(rgba.r);\n  rgba.g = Math.round(rgba.g);\n  rgba.b = Math.round(rgba.b);\n  return { ...rgba, a };\n};\n\nexport const hsvaToRgbString = (hsva: HsvaColor): string => {\n  const { r, g, b } = hsvaToRgba(hsva);\n  return `rgb(${r}, ${g}, ${b})`;\n};\n\nexport const hsvaToRgbaString = (hsva: HsvaColor): string => {\n  const { r, g, b, a } = hsvaToRgba(hsva);\n  return `rgba(${r}, ${g}, ${b}, ${a})`;\n};\n\nexport const rgbaToRgb = ({ r, g, b }: RgbaColor): RgbColor => ({ r, g, b });\nexport const hslaToHsl = ({ h, s, l }: HslaColor): HslColor => ({ h, s, l });\nexport const hsvaToHex = (hsva: HsvaColor): string => rgbaToHex(hsvaToRgba(hsva));\nexport const hsvaToHexa = (hsva: HsvaColor): string => rgbaToHexa(hsvaToRgba(hsva));\nexport const hsvaToHsv = ({ h, s, v }: HsvaColor): HsvColor => ({ h, s, v });\n\nexport const color = (str: string | HsvaColor): ColorResult => {\n  let rgb!: RgbColor;\n  let hsl!: HslColor;\n  let hsv!: HsvColor;\n  let rgba!: RgbaColor;\n  let hsla!: HslaColor;\n  let hsva!: HsvaColor;\n  let hex!: string;\n  let hexa!: string;\n  if (typeof str === 'string' && validHex(str)) {\n    hsva = hexToHsva(str);\n    hex = str;\n  } else if (typeof str !== 'string') {\n    hsva = str;\n  }\n  if (hsva) {\n    hsv = hsvaToHsv(hsva);\n    hsla = hsvaToHsla(hsva);\n    rgba = hsvaToRgba(hsva);\n    hexa = rgbaToHexa(rgba);\n    hex = hsvaToHex(hsva);\n    hsl = hslaToHsl(hsla);\n    rgb = rgbaToRgb(rgba);\n  }\n  return { rgb, hsl, hsv, rgba, hsla, hsva, hex, hexa };\n};\n"
  ],
  "mappings": "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"
}